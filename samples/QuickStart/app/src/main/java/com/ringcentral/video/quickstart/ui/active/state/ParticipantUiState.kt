package com.ringcentral.video.quickstart.ui.active.state

import com.ringcentral.video.*
import java.util.*

data class ParticipantUiState(
    val video: IVideo? = null,
    val videoSource: IVideoSource? = null,
    val displayName: String? = null,
    val status: EParticipantStatus? = null,
    val mediaStream: IMediaStream? = null,
    val forwardStreamPaused: Boolean = false,
    val localPreviewStream: IMediaStream? = null,
    val videoTrack: IVideoStreamTrack? = null,
    val hasVideo: Boolean = false,
    val hasVideoStream :Boolean = false,
    val isVideoOn: Boolean = false,
    val hasActiveVideo: Boolean = false,
    val videoLocalMute: Boolean = false,
    val audioLocalMute: Boolean = false,
    val videoServerMute: Boolean = false,
    val audioServerMute: Boolean = false,
    val isAllowUmuteAudio: Boolean = false,
    val isAllowUmuteVideo: Boolean = false,
    val isMe: Boolean = false,
    val isRoomExtension: Boolean = false,
    val isPstn: Boolean = false,
    val isOnhold: Boolean = false,
    val isDeleted: Boolean = false,
    val id: String? = null,
    val modelId: Long = -1,
    val pid: String? = null,
    val isHost: Boolean = false,
    val isModerator: Boolean = false,
    val isTemporaryModerator: Boolean = false,
    val participantMedia: IParticipantMedia? = null,
    val headshotUrl: String? = null,
    val initialsAvatarName: String? = null,
    val headshotColor: Long = -1,
    val isScreenSharing: Boolean = false,
    val isWhiteBoardSharing: Boolean = false,
    val isSpeaking: Boolean = false,
    val isJustCreated: Boolean = false,
    val isWaitingRoomUmi: Boolean = false,
    val isWaitingRoomUmiBeforeBR: Boolean = false,
    val showGreenFrame: Boolean = false,
    val hasStartedCallMe: Boolean = false,
    val inAudioStreamActivity: EStreamActivity? = null,
    val participantID: Long = -1,
    val hasNonPstnSession: Boolean = false,
    val isOnlyPstnSession: Boolean = false,
    val mediaReconnection: Boolean = false,
    val networkQuality: Int = -1,
    val nqiStatus: ENqiStatus? = null,
    val isPinned: Boolean = false,
    val rcAccountId: String? = null,
    val didChangeServerMute: Boolean = false,
    val didChangeVideoServerMute: Boolean = false,
    val activeDeviceCount: Int = -1,
    val isGuest: Boolean = false,
    val email: String? = null,
    val company: String? = null,
    val department: String? = null,
    val jobTitle: String? = null,
    val customStatus: String? = null,
    val contactId: Long = -1,
    val participantJoinTime: Date? = null,
    val isMobileUser: Boolean = false,
    val isHidden: Boolean = false,
    val leaveMeeting: Boolean = false,
)

fun IParticipant?.toParticipantUiState(): ParticipantUiState {
    if (this == null) {
        return ParticipantUiState()
    } else {
        return ParticipantUiState(
            video = video,
            videoSource = videoSource,
            displayName = this.displayName(),
            status = this.status(),
            mediaStream = this.mediaStream,
            forwardStreamPaused = this.forwardStreamPaused(),
            localPreviewStream = this.localPreviewStream,
            videoTrack = this.videoTrack,
            hasVideo = this.hasVideo(),
            hasVideoStream = hasVideoStream(),
            isVideoOn = this.isVideoOn,
            hasActiveVideo = this.hasActiveVideo(),
            videoLocalMute = this.videoLocalMute(),
            audioLocalMute = this.audioLocalMute(),
            videoServerMute = this.videoServerMute(),
            audioServerMute = this.audioServerMute(),
            isAllowUmuteAudio = this.isAllowUmuteAudio,
            isAllowUmuteVideo = this.isAllowUmuteVideo,
            isMe = this.isMe,
            isRoomExtension = this.isRoomExtension,
            isPstn = this.isPstn,
            isOnhold = this.isOnhold,
            isDeleted = this.isDeleted,
            id = this.id,
            modelId = this.modelId,
            pid = this.pid,
            isHost = this.isHost,
            isModerator = this.isModerator,
            isTemporaryModerator = this.isTemporaryModerator,
            participantMedia = this.participantMedia,
            headshotUrl = this.headshotUrl,
            initialsAvatarName = this.initialsAvatarName,
            headshotColor = this.headshotColor,
            isScreenSharing = this.isScreenSharing,
            isWhiteBoardSharing = this.isWhiteBoardSharing,
            isSpeaking = this.isSpeaking,
            isJustCreated = this.isJustCreated,
            isWaitingRoomUmi = this.isWaitingRoomUmi,
            isWaitingRoomUmiBeforeBR = this.isWaitingRoomUmiBeforeBR,
            showGreenFrame = this.showGreenFrame,
            hasStartedCallMe = this.hasStartedCallMe(),
            inAudioStreamActivity = this.inAudioStreamActivity(),
            participantID = this.participantID(),
            hasNonPstnSession = this.hasNonPstnSession(),
            isOnlyPstnSession = this.isOnlyPstnSession,
            mediaReconnection = this.mediaReconnection,
            networkQuality = this.networkQuality,
            nqiStatus = this.nqiStatus,
            isPinned = this.isPinned,
            rcAccountId = this.rcAccountId,
            didChangeServerMute = this.didChangeServerMute(),
            didChangeVideoServerMute = this.didChangeVideoServerMute(),
            activeDeviceCount = this.activeDeviceCount,
            isGuest = this.isGuest,
            email = this.email,
            company = this.company,
            department = this.department,
            jobTitle = this.jobTitle,
            customStatus = this.customStatus,
            contactId = this.contactId,
            participantJoinTime = this.participantJoinTime,
            isMobileUser = this.isMobileUser,
            isHidden = this.isHidden,
        )
    }
}